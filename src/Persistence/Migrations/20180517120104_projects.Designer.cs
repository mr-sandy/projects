// <auto-generated />
using Linn.Projects.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Microsoft.EntityFrameworkCore.ValueGeneration;
using System;

namespace Linn.Projects.Persistence.Migrations
{
    [DbContext(typeof(ServiceDbContext))]
    [Migration("20180517120104_projects")]
    partial class projects
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026");

            modelBuilder.Entity("Linn.Projects.Domain.Activities.ProjectActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ActivityType")
                        .IsRequired();

                    b.Property<string>("EmployeeUrl");

                    b.Property<int?>("ProjectId");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectActivity");

                    b.HasDiscriminator<string>("ActivityType").HasValue("ProjectActivity");
                });

            modelBuilder.Entity("Linn.Projects.Domain.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("Linn.Projects.Domain.Activities.CreateProjectActivity", b =>
                {
                    b.HasBaseType("Linn.Projects.Domain.Activities.ProjectActivity");

                    b.Property<string>("Name");

                    b.ToTable("CreateProjectActivity");

                    b.HasDiscriminator().HasValue("create-project");
                });

            modelBuilder.Entity("Linn.Projects.Domain.Activities.ProjectActivity", b =>
                {
                    b.HasOne("Linn.Projects.Domain.Project")
                        .WithMany("Activities")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
